name: mybuild

on:
  schedule:
    - cron: 6 */8 * * *
#  push:
#    branches:
#      - main
#  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 自动版本号
        shell: bash
        run: |
          # 读取 versionCode 和 version
          versionCode=$(cat ./config/versionCode)
          echo "version=$(bash ./config/version.sh)" >> $GITHUB_ENV
          # 递增 versionCode
          ((versionCode++))
          # 将新版本号和 versionCode 写回到文件中
          echo "$versionCode" > config/versionCode
          echo "version=$vss" >> $GITHUB_ENV
          # 打印发布时间到 bgcode.txt
          echo "**发布时间：$(date +'%Y-%m-%d %H:%M:%S')**" >> bgcode.txt
      - name: Build With Gradle
        run: |
          sed -i "/   versionCode/c\\versionCode  ${{ env.versionCode }}" ./app/build.gradle
          sed -i "/   versionName/c\\versionName '${{ env.version }}'" ./app/build.gradle
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all

      - name: Prepare App
        run: |
          mkdir -p ${{ github.workspace }}/apk/
          for file in `find ~ -name "*.apk" -print`; do
            mv "$file" ${{ github.workspace }}/apk/
          done

      - name: Commit and push changes
        run: |
              git config --local user.email bglhcode@icloud.com
              git config --local user.name  bgcode
              git pull
              git add ./config/version  ./config/versionCode
              git commit -m "更新version版本"
              git push

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: com.github.tvbox.osc
          path: ${{ github.workspace }}/apk/*
      - name: 发布到release
        uses: softprops/action-gh-release@v1
        with:
            tag_name: v${{ env.version }}
            body_path: bgcode.txt
            files: ${{ github.workspace }}/apk/*
      - name: 删除
        shell: bash
        run: |
                    current_run_id=$(echo "$GITHUB_RUN_ID")
                    runs=$(curl -s -X GET "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ github.workflow }}/runs" \
                      -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      -H "Accept: application/vnd.github.v3+json" | jq -r '.workflow_runs[].id')
                    echo "$runs"
                        keep_runs=$(echo "$runs" | head -n 5)
                        for run_id in $runs; do
                          if [ "$run_id" != "$current_run_id" ] && [[ ! "$keep_runs" =~ "$run_id" ]]; then
                            curl -s -X DELETE "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id" \
                              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                              -H "Accept: application/vnd.github.v3+json" > /dev/null
                          fi
                        done